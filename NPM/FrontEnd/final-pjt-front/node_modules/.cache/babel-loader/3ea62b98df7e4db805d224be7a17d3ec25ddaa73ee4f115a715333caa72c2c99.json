{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport createPersistedState from \"vuex-persistedstate\";\nimport router from '@/router';\nVue.use(Vuex);\nconst API_URL = 'http://127.0.0.1:8000';\nexport default new Vuex.Store({\n  plugins: [createPersistedState()],\n  state: {\n    token: null\n  },\n  getters: {\n    isLogin(state) {\n      return state.token ? true : false;\n    }\n  },\n  mutations: {\n    LOG_IN(state) {\n      state.token = 123123;\n      // router.push({ name : 'home' }).catch(()=>{})\n      console.log(router.currentRoute);\n      if (router.currentRoute.name != 'home') {\n        router.push({\n          name: 'home'\n        });\n      } else {\n        router.go(router.currentRoute);\n      }\n    }\n  },\n  actions: {\n    signUp(context, userData) {\n      axios({\n        method: 'POST',\n        url: `${API_URL}/accounts/signup`,\n        data: {\n          name: userData.name,\n          nickname: userData.nickname,\n          email: userData.email,\n          password1: userData.password1,\n          password2: userData.password2,\n          preferMusicGenre: userData.preferMusicGenre\n        }\n      }).then(() => {\n        router.push({\n          name: 'login'\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    logIn(context, userData) {\n      // axios({\n      //   method: 'POST',\n      //   urls: `${API_URL}/accounts/logIn`,\n      //   data: {\n      //     username: userData.username,\n      //     password: userData.password,\n      //   }\n      // })\n      // .then((response) => {\n      //   console.log(response)\n      //   context.commit('LOG_IN', response.data)\n      // })\n      // .catch((error) => {\n      //   alert('유저정보를 확인해주세요.')\n      //   console.log(error)\n      // })\n      console.log(userData);\n      context.commit('LOG_IN');\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","axios","createPersistedState","router","use","API_URL","Store","plugins","state","token","getters","isLogin","mutations","LOG_IN","console","log","currentRoute","name","push","go","actions","signUp","context","userData","method","url","data","nickname","email","password1","password2","preferMusicGenre","then","catch","error","logIn","commit","modules"],"sources":["/Users/isabel_noh/ssafy8/1_final_project/NoSongGlobal/NPM/FrontEnd/final-pjt-front/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport createPersistedState from \"vuex-persistedstate\";\nimport router from '@/router'\n\nVue.use(Vuex)\n\nconst API_URL = 'http://127.0.0.1:8000'\n\nexport default new Vuex.Store({\n  plugins: [\n    createPersistedState()\n  ],\n  state: {\n    token: null,\n  },\n  getters: {\n    isLogin(state) {\n      return state.token ? true : false\n    }\n  },\n  mutations: {\n    LOG_IN(state){\n      state.token = 123123\n      // router.push({ name : 'home' }).catch(()=>{})\n      console.log(router.currentRoute)\n      if(router.currentRoute.name != 'home'){\n        router.push({ name : 'home' })\n      } else {\n        router.go(router.currentRoute)\n      }\n    }\n  },\n  actions: {\n    signUp(context, userData) {\n      axios({\n        method: 'POST',\n        url: `${API_URL}/accounts/signup`,\n        data: {\n          name: userData.name,\n          nickname: userData.nickname,\n          email: userData.email,\n          password1: userData.password1,\n          password2: userData.password2,\n          preferMusicGenre: userData.preferMusicGenre\n        }\n      }).\n      then(() => {\n        router.push({ name: 'login'})\n      }).\n      catch((error) => {\n        console.log(error)\n      })\n    },\n    logIn(context, userData) {\n      // axios({\n      //   method: 'POST',\n      //   urls: `${API_URL}/accounts/logIn`,\n      //   data: {\n      //     username: userData.username,\n      //     password: userData.password,\n      //   }\n      // })\n      // .then((response) => {\n      //   console.log(response)\n      //   context.commit('LOG_IN', response.data)\n      // })\n      // .catch((error) => {\n      //   alert('유저정보를 확인해주세요.')\n      //   console.log(error)\n      // })\n      console.log(userData)\n      context.commit('LOG_IN')\n    }\n  },\n  modules: {\n    \n  }\n})\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,oBAAoB,MAAM,qBAAqB;AACtD,OAAOC,MAAM,MAAM,UAAU;AAE7BJ,GAAG,CAACK,GAAG,CAACJ,IAAI,CAAC;AAEb,MAAMK,OAAO,GAAG,uBAAuB;AAEvC,eAAe,IAAIL,IAAI,CAACM,KAAK,CAAC;EAC5BC,OAAO,EAAE,CACPL,oBAAoB,EAAE,CACvB;EACDM,KAAK,EAAE;IACLC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,CAACH,KAAK,EAAE;MACb,OAAOA,KAAK,CAACC,KAAK,GAAG,IAAI,GAAG,KAAK;IACnC;EACF,CAAC;EACDG,SAAS,EAAE;IACTC,MAAM,CAACL,KAAK,EAAC;MACXA,KAAK,CAACC,KAAK,GAAG,MAAM;MACpB;MACAK,OAAO,CAACC,GAAG,CAACZ,MAAM,CAACa,YAAY,CAAC;MAChC,IAAGb,MAAM,CAACa,YAAY,CAACC,IAAI,IAAI,MAAM,EAAC;QACpCd,MAAM,CAACe,IAAI,CAAC;UAAED,IAAI,EAAG;QAAO,CAAC,CAAC;MAChC,CAAC,MAAM;QACLd,MAAM,CAACgB,EAAE,CAAChB,MAAM,CAACa,YAAY,CAAC;MAChC;IACF;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,MAAM,CAACC,OAAO,EAAEC,QAAQ,EAAE;MACxBtB,KAAK,CAAC;QACJuB,MAAM,EAAE,MAAM;QACdC,GAAG,EAAG,GAAEpB,OAAQ,kBAAiB;QACjCqB,IAAI,EAAE;UACJT,IAAI,EAAEM,QAAQ,CAACN,IAAI;UACnBU,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ;UAC3BC,KAAK,EAAEL,QAAQ,CAACK,KAAK;UACrBC,SAAS,EAAEN,QAAQ,CAACM,SAAS;UAC7BC,SAAS,EAAEP,QAAQ,CAACO,SAAS;UAC7BC,gBAAgB,EAAER,QAAQ,CAACQ;QAC7B;MACF,CAAC,CAAC,CACFC,IAAI,CAAC,MAAM;QACT7B,MAAM,CAACe,IAAI,CAAC;UAAED,IAAI,EAAE;QAAO,CAAC,CAAC;MAC/B,CAAC,CAAC,CACFgB,KAAK,CAAEC,KAAK,IAAK;QACfpB,OAAO,CAACC,GAAG,CAACmB,KAAK,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC;IACDC,KAAK,CAACb,OAAO,EAAEC,QAAQ,EAAE;MACvB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAT,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;MACrBD,OAAO,CAACc,MAAM,CAAC,QAAQ,CAAC;IAC1B;EACF,CAAC;EACDC,OAAO,EAAE,CAET;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}